@page "/CreateTecnicos"
@using RegistroTecnicos.Models
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject NavigationManager navigation

<PageTitle>Guardar nuevo técnico</PageTitle>
<EditForm Model="tecnico" OnValidSubmit="Crear">
    <DataAnnotationsValidator/>
    <div class="container">
        <div class="card shadow-lg">
            @*Header*@
            <div class="card-header">
                <h1><strong>Crear nuevo técnico</strong></h1>
            </div>
            @*Body*@
            <div class="card-body">
                @*Id*@
                <label class="form-label" for="id"><strong>TecnicoId</strong></label>
                <InputNumber id="id" class="form-control" @bind-Value="tecnico.TecnicosId"></InputNumber>

                @*Nombre*@
                <label class="form-label" for="nombre"><strong>Nombres</strong></label>
                <InputText id="nombre" class="form-control" @bind-Value="tecnico.Nombres"></InputText>
                <ValidationMessage For="@(()=> tecnico.Nombres)"></ValidationMessage>

                @*SueldoHora*@
                <label class="form-label" for="sueldo"><strong>Sueldo por hora</strong></label>
                <InputNumber id="sueldo" class="form-control" @bind-Value="tecnico.SueldoHora"></InputNumber>
                <ValidationMessage For="@(()=> tecnico.SueldoHora)"></ValidationMessage>
            </div>
            @*Footer*@
            <div class="card-footer">
                <button type="button" class="btn btn-outline-secondary" @onclick="Volver">Volver</button>
                <button type="submit" class="btn btn-outline-success">Crear</button>
            </div>
        </div>
    </div>
</EditForm>


@code {
    public Tecnicos tecnico {get; set;} = new Tecnicos();

    public async Task Crear()
    {
        await tecnicoService.Crear(tecnico);
    }

    public void Volver()
    {
        navigation.NavigateTo("/Tecnicos");
    }
}


